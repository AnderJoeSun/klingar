/*
 * Copyright (C) 2016 Simon Norberg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'checkstyle'

checkstyle {
  toolVersion = '7.8.2'
}

task checkstyle(type: Checkstyle) {
  group 'verification'
  configFile rootProject.file('checkstyle.xml')
  source 'src/main/java'
  ignoreFailures false
  showViolations true
  include '**/*.java'
  exclude '**/gen/**'

  classpath = files()
}

afterEvaluate {
  if (project.tasks.findByName('check')) {
    check.dependsOn('checkstyle')
  }
}

def versionMajor = 0
def versionMinor = 10
def versionPatch = 0

def gitSha() {
  def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    throw new RuntimeException(p.errorStream.text)
  }

  return p.text.trim()
}

def gitTimestamp() {
  def p = 'git log -n 1 --format=%at'.execute([], rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    throw new RuntimeException(p.errorStream.text)
  }

  return p.text.trim()
}

def isTravis = "true" == System.getenv("TRAVIS")
def preDexEnabled = "true" == System.getProperty("pre-dex", "true")

android {
  compileSdkVersion 26
  buildToolsVersion '26.0.0'

  dexOptions {
    preDexLibraries = preDexEnabled && !isTravis
  }
  defaultConfig {
    applicationId "net.simno.klingar"
    testApplicationId "net.simno.klingar.test"
    minSdkVersion 21
    targetSdkVersion 25

    versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
    buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"
    buildConfigField "String", "CAST_APP_ID", "\"631E34EA\""
    buildConfigField 'String', 'DEBUG_USER', "\"${project.findProperty('debugUser') ?: 'null'}\""
    buildConfigField 'String', 'DEBUG_PWD', "\"${project.findProperty('debugPwd') ?: 'null'}\""

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  lintOptions {
    abortOnError false
  }
  buildTypes {
    debug {
      debuggable true
      minifyEnabled false
    }
    release {
      debuggable false
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  testOptions {
    unitTests.returnDefaultValues = true
  }
}

ext {
  autoMoshiVersion = '0.4.3'
  autoParcelVersion = '0.2.5'
  autoValueVersion = '1.4.1'
  butterknifeVersion = '8.6.0'
  conductorVersion = '2.1.3'
  daggerVersion = '2.11'
  exoPlayerVersion = 'r2.4.2'
  glideVersion = '4.0.0-RC1'
  leakCanaryVersion = '1.5.1'
  licensesDialogVersion = '1.8.2'
  moshiVersion = '1.4.0'
  okhttpVersion = '3.8.1'
  playServicesVersion = '11.0.1'
  retrofitVersion = '2.3.0'
  rxAndroidVersion = '2.0.1'
  rxJavaVersion = '2.1.1'
  rxLifecycleVersion = '2.1.0'
  rxRelayVersion = '2.0.0'
  supportLibVersion = '26.0.0-beta2'
  timberVersion = '4.5.1'
}

dependencies {
  compile "com.android.support:appcompat-v7:${supportLibVersion}"
  compile "com.android.support:mediarouter-v7:${supportLibVersion}"
  compile "com.android.support:recyclerview-v7:${supportLibVersion}"
  compile "com.android.support:design:${supportLibVersion}"

  compile "com.bluelinelabs:conductor:${conductorVersion}"
  compile "com.bluelinelabs:conductor-rxlifecycle2:${conductorVersion}"

  compile "com.github.bumptech.glide:glide:${glideVersion}"
  compile "com.github.bumptech.glide:okhttp-integration:${glideVersion}"

  compile "com.google.android.exoplayer:exoplayer-core:${exoPlayerVersion}"
  compile "com.google.android.gms:play-services-cast-framework:${playServicesVersion}"

  provided "com.google.auto.value:auto-value:${autoValueVersion}"
  annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
  testAnnotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
  annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:${autoMoshiVersion}"
  annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:${autoParcelVersion}"
  compile "com.ryanharter.auto.value:auto-value-parcel-adapter:${autoParcelVersion}"

  compile "com.google.dagger:dagger:${daggerVersion}"
  annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

  compile "com.jakewharton:butterknife:${butterknifeVersion}"
  annotationProcessor "com.jakewharton:butterknife-compiler:${butterknifeVersion}"
  compile "com.jakewharton.timber:timber:${timberVersion}"
  compile "com.jakewharton.rxrelay2:rxrelay:${rxRelayVersion}"

  debugCompile "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"
  releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
  testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
  compile "com.squareup.moshi:moshi:${moshiVersion}"
  compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
  compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
  compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
  compile "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
  compile("com.squareup.retrofit2:converter-simplexml:${retrofitVersion}") {
    exclude group: 'stax', module: 'stax-api'
    exclude group: 'stax', module: 'stax'
    exclude group: 'xpp3', module: 'xpp3'
  }

  compile "com.trello.rxlifecycle2:rxlifecycle:${rxLifecycleVersion}"
  compile "com.trello.rxlifecycle2:rxlifecycle-android:${rxLifecycleVersion}"

  compile "de.psdev.licensesdialog:licensesdialog:${licensesDialogVersion}"

  compile "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
  compile "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"

  provided 'javax.annotation:jsr250-api:1.0'

  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-library:1.3'
  testCompile 'org.mockito:mockito-core:2.8.47'
}
